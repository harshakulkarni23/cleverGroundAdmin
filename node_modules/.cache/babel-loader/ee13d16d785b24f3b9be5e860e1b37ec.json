{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport asyncReducer from \"./reducers\";\nimport { persistStore, persistReducer, createTransform } from \"redux-persist\";\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web and AsyncStorage for react-native\n\nexport const encode = toDeshydrate => JSON.stringify(toDeshydrate, replacer);\nexport const decode = toRehydrate => JSON.parse(toRehydrate, reviver);\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [thunk];\n\nconst replacer = (key, value) => value instanceof Date ? value.toISOString() : value;\n\nconst reviver = (key, value) => typeof value === \"string\" && value.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/) ? new Date(value) : value;\n\nconst persistConfig = {\n  key: \"cleverground_persisted_data\",\n  storage,\n  transforms: [createTransform(encode, decode)],\n  stateReconciler: autoMergeLevel2\n};\nconst persistedReducer = persistReducer(persistConfig, asyncReducer);\n\nif (process.env.NODE_ENV === \"development\") {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n  if (typeof devToolsExtension === \"function\") {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nconst composedEnhancers = compose(applyMiddleware(...middleware), ...enhancers);\nlet store = createStore(persistedReducer, initialState, composedEnhancers);\nlet persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/home/bb-pc-harshada/cleverpressFrontend/cleverground-admin/src/redux/store.js"],"names":["createStore","applyMiddleware","compose","thunk","asyncReducer","persistStore","persistReducer","createTransform","autoMergeLevel2","storage","encode","toDeshydrate","JSON","stringify","replacer","decode","toRehydrate","parse","reviver","initialState","enhancers","middleware","key","value","Date","toISOString","match","persistConfig","transforms","stateReconciler","persistedReducer","process","env","NODE_ENV","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION__","push","composedEnhancers","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,YAAP,MAAyB,YAAzB;AAEA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,eAAvC,QAA8D,eAA9D;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AAEjD,OAAO,MAAMC,MAAM,GAAGC,YAAY,IAAIC,IAAI,CAACC,SAAL,CAAeF,YAAf,EAA6BG,QAA7B,CAA/B;AACP,OAAO,MAAMC,MAAM,GAAGC,WAAW,IAAIJ,IAAI,CAACK,KAAL,CAAWD,WAAX,EAAwBE,OAAxB,CAA9B;AAEP,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,SAAS,GAAG,EAAlB;AACA,MAAMC,UAAU,GAAG,CAAClB,KAAD,CAAnB;;AAEA,MAAMW,QAAQ,GAAG,CAACQ,GAAD,EAAMC,KAAN,KACfA,KAAK,YAAYC,IAAjB,GAAwBD,KAAK,CAACE,WAAN,EAAxB,GAA8CF,KADhD;;AAEA,MAAML,OAAO,GAAG,CAACI,GAAD,EAAMC,KAAN,KACd,OAAOA,KAAP,KAAiB,QAAjB,IACAA,KAAK,CAACG,KAAN,CAAY,sCAAZ,CADA,GAEI,IAAIF,IAAJ,CAASD,KAAT,CAFJ,GAGIA,KAJN;;AAMA,MAAMI,aAAa,GAAG;AACpBL,EAAAA,GAAG,EAAE,6BADe;AAEpBb,EAAAA,OAFoB;AAGpBmB,EAAAA,UAAU,EAAE,CAACrB,eAAe,CAACG,MAAD,EAASK,MAAT,CAAhB,CAHQ;AAIpBc,EAAAA,eAAe,EAAErB;AAJG,CAAtB;AAMA,MAAMsB,gBAAgB,GAAGxB,cAAc,CAACqB,aAAD,EAAgBvB,YAAhB,CAAvC;;AAEA,IAAI2B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,QAAMC,iBAAiB,GAAGC,MAAM,CAACC,4BAAjC;;AAEA,MAAI,OAAOF,iBAAP,KAA6B,UAAjC,EAA6C;AAC3Cd,IAAAA,SAAS,CAACiB,IAAV,CAAeH,iBAAiB,EAAhC;AACD;AACF;;AAED,MAAMI,iBAAiB,GAAGpC,OAAO,CAACD,eAAe,CAAC,GAAGoB,UAAJ,CAAhB,EAAiC,GAAGD,SAApC,CAAjC;AAEA,IAAImB,KAAK,GAAGvC,WAAW,CAAC8B,gBAAD,EAAmBX,YAAnB,EAAiCmB,iBAAjC,CAAvB;AACA,IAAIE,SAAS,GAAGnC,YAAY,CAACkC,KAAD,CAA5B;AAEA,eAAe;AAAEA,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport asyncReducer from \"./reducers\";\n\nimport { persistStore, persistReducer, createTransform } from \"redux-persist\";\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web and AsyncStorage for react-native\n\nexport const encode = toDeshydrate => JSON.stringify(toDeshydrate, replacer);\nexport const decode = toRehydrate => JSON.parse(toRehydrate, reviver);\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [thunk];\n\nconst replacer = (key, value) =>\n  value instanceof Date ? value.toISOString() : value;\nconst reviver = (key, value) =>\n  typeof value === \"string\" &&\n  value.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/)\n    ? new Date(value)\n    : value;\n\nconst persistConfig = {\n  key: \"cleverground_persisted_data\",\n  storage,\n  transforms: [createTransform(encode, decode)],\n  stateReconciler: autoMergeLevel2\n};\nconst persistedReducer = persistReducer(persistConfig, asyncReducer);\n\nif (process.env.NODE_ENV === \"development\") {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n  if (typeof devToolsExtension === \"function\") {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nconst composedEnhancers = compose(applyMiddleware(...middleware), ...enhancers);\n\nlet store = createStore(persistedReducer, initialState, composedEnhancers);\nlet persistor = persistStore(store);\n\nexport default { store, persistor };\n"]},"metadata":{},"sourceType":"module"}